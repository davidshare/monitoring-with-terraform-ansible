services:
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    networks:
      - monitoring
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/loki-config.yml
      - loki_data:/loki

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    networks:
      - monitoring
    volumes:
      - ./monitoring/promtail-config.yml:/etc/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/log:/var/log
    command: "-config.file=/etc/promtail/config.yml"
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SERVER_ROOT_URL=https://cv01.davidessien.com/grafana
      - GF_DATASOURCES_DEFAULT_NAME=Prometheus
      - GF_DATASOURCES_DEFAULT_TYPE=prometheus
      - GF_DATASOURCES_DEFAULT_URL=http://prometheus:9090/prometheus # Prometheus service in Docker
      - GF_DATASOURCES_DEFAULT_ACCESS=proxy # Use proxy mode to access Prometheus
      - GF_DATASOURCES_DEFAULT_IS_DEFAULT=true
      - GF_DATASOURCES_LOKI_NAME=Loki
      - GF_DATASOURCES_LOKI_TYPE=loki
      - GF_DATASOURCES_LOKI_URL=http://loki:3100 # Internal URL of Loki
      - GF_DATASOURCES_LOKI_ACCESS=proxy
    labels:
      - traefik.enable=true

      # HTTP Rule
      - traefik.http.routers.grafana-http.rule=Host(`cv01.davidessien.com`) && PathPrefix(`/grafana`)
      - traefik.http.routers.grafana-http.entrypoints=web
      - traefik.http.routers.grafana-http.middlewares=redirect-to-https,grafana-strip-prefix

      # HTTPS Rule
      - traefik.http.routers.grafana-https.rule=Host(`cv01.davidessien.com`) && PathPrefix(`/grafana`)
      - traefik.http.routers.grafana-https.entrypoints=websecure
      - traefik.http.routers.grafana-https.tls.certresolver=production
      - traefik.http.routers.grafana-https.middlewares=grafana-strip-prefix

      # Strip Prefix Middleware
      - traefik.http.middlewares.grafana-strip-prefix.stripprefix.prefixes=/grafana

      # Redirect Middleware
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https

      # Server Port
      - traefik.http.services.grafana.loadbalancer.server.port=3000

    depends_on:
      - loki
      - prometheus
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.external-url=https://cv01.davidessien.com/prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    labels:
      - traefik.enable=true

      # HTTP Rule
      - traefik.http.routers.prometheus-http.rule=Host(`cv01.davidessien.com`) && PathPrefix(`/prometheus`)
      - traefik.http.routers.prometheus-http.entrypoints=web

      # HTTPS Rule
      - traefik.http.routers.prometheus-https.rule=Host(`cv01.davidessien.com`) && PathPrefix(`/prometheus`)
      - traefik.http.routers.prometheus-https.entrypoints=websecure
      - traefik.http.routers.prometheus-https.tls.certresolver=production

      # Server Port
      - traefik.http.services.prometheus.loadbalancer.server.port=9090

    depends_on:
      - cadvisor
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitoring
      - apps

volumes:
  grafana_data:
  prometheus_data:
  loki_data:
